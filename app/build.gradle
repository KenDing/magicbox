apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "online.magicbox.app"
        minSdkVersion 13//8主題太差
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        debug {
            storeFile file("skilltemp.jks")
            storePassword "123456"
            keyAlias "skilltemp_demo"
            keyPassword "123456"
        }
        release {
            storeFile file("skilltemp.jks")
            storePassword "123456"
            keyAlias "skilltemp"
            keyPassword "123456"
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

//        applicationVariants.all { variant ->
//            variant.dex.dependsOn << processDebugResources2 //在执行dx命令之前将代码打入到class中
//            variant.dex.dependsOn << processWithJavassist //在执行dx命令之前将代码打入到class中
//        }

//        applicationVariants.all { variant ->
//            println 'variant:' + variant.buildType.name
//
//            if (variant.buildType.isDebuggable()) {
//                //在执行dx命令之前将代码打入到class中
//                String classPath = project(':app').buildDir.absolutePath + '/intermediates/classes/debug'
//                //项目编译class所在目录
//                String libPath = "$rootDir/transformClasses" //AntilazyLoad.class所在目錄
//                String igonre = "*.BuildConfig;*.MainActivity"
//                println classPath
//                println libPath
//                println igonre
//
//                javaexec {
//                    classpath "$rootDir/transformClasses/transformClasses.jar"
//                    main = 'cn.georgeyang.TransformClasses'
//                    args classPath, libPath, igonre
//                }
//            }
//        }
    }
}

android.applicationVariants.all { variant ->
    variant.dex.dependsOn << processWithJavassist //在执行dx命令之前将代码打入到class中

    variant.mergeResources.doLast {
        println "==========處理資源2222========="
    }
//    if (variant.buildType.applicationIdSuffix) {
//        println "==========處理資源========="
//        variant.mergeResources.doLast {
//            println "==========處理資源2222========="
//        }
//    }

//    variant.mergeResources.doLast {
////        def f = file("${buildDir}/intermediates/res/${variant.dirName}/values/values.xml")
////        String content = f.getText(encoding)
////        content = content.replaceAll('来往','来往Beta')
////        f.write(content,encoding)
//
//        def buildType = variant.buildType
//        def encoding = java.nio.charset.Charset.defaultCharset().toString()
//        if (buildType.applicationIdSuffix) {
//
//
//    }
}


task('processWithJavassist') << {
    println '-----------開始往class插入代碼-----------------'

    String classPath = project(':app').buildDir.absolutePath + '/intermediates/classes/debug'//项目编译class所在目录
    String libPath = "$rootDir/transformClasses;$rootDir/transformClasses/buildLib" //AntilazyLoad.class所在目錄
    String igonre = "*.App;*.BuildConfig;online.magicbox.bugfix.*;online.magicbox.app.R.*;"
    println classPath
    println libPath
    println igonre

    javaexec {
        classpath "$rootDir/transformClasses/transformClasses.jar"
        main = 'cn.georgeyang.TransformClasses'
        args classPath,libPath,igonre
    }
}






//R path:D:\code\android\MagicBox\app\build\generated\source\r\debug\online\magicbox\app

gradle.taskGraph.beforeTask { Task task ->
//    println "name:" + task.name
}
dependencies {
    //    compile files('src/main/libs/host.jar')
    //    compile files('src/main/jni/fastjson-1.1.37-leancloud.jar')
//    compile 'com.alibaba:fastjson:1.2.8'
}
