apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "cn.georgeyang.magicbox"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    applicationVariants.all { variant ->
//        variant.dex.dependsOn << processWithJavassist //在执行dx命令之前将代码打入到class中
//    }
}


gradle.taskGraph.beforeTask { Task task ->
//    println '================'
//    println 'Pname:' + task.project.name
//    println 'Tname:' + task.name
    if ("app".equals(task.project.name) && task.name.startsWith('transformClassesWith')) {
        println '================'
        task.doLast {
//            exec {
//                commandLine 'echo hhhh >> $rootDir/test.txt'
//            }
//            javaexec {
//                classpath "$rootDir/ClassComputer.jar"
//                main = 'io.github.bunnyblue.droidfix.classcomputer.ClassComputer'
//                args "injectCode", projectDir.getAbsolutePath(), "debugDroidFix"
//            }
        }
    }
}
task('processWithJavassist') << {
//    String classPath = file('build/intermediates/classes/debug')//项目编译class所在目录
//    dodola.patch.PatchClass.process(classPath, project(':hackdex').buildDir
//            .absolutePath + '/intermediates/classes/debug')//第二个参数是hackdex的class所在目录

//    println '$$$$$$$$$$$$$$'
//    commandLine 'echo hhhh >> ${projectDir}/test.txt'

}


//
//task buildNative(type: Exec, description: 'CompileJNI source via NDK') {
//    if(project.gradle.ndkDir == null) //看看有没有指定ndk.dir路径
//        println "CANNOT Build NDK"
//    else{
//        commandLine "/${project.gradle.ndkDir}/ndk-build",
//                '-C', file('jni').absolutePath,
//                '-j', Runtime.runtime.availableProcessors(),
//                'all', 'NDK_DEBUG=0'
//    }
//}
//tasks.withType(JavaCompile) {
//    compileTask -> compileTask.dependsOn buildNative
//}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
}
